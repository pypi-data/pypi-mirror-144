{"version":3,"file":"vendors-node_modules_projectstorm_geometry_dist_index_js.c285b23fcab6eabdfdb1.js","mappings":";;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,0BAA0B;AAChD,gBAAgB,mBAAO,CAAC,oEAAS;AACjC,kBAAkB,mBAAO,CAAC,wEAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B,GAAG,gCAAgC,IAAI,gCAAgC,IAAI,yBAAyB;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;ACnDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;;;;;ACnBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,iBAAiB,mBAAO,CAAC,sEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;;;;;;;;AClEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,gBAAgB,mBAAO,CAAC,oEAAS;AACjC,UAAU,mBAAO,CAAC,+CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,oBAAoB,mBAAO,CAAC,4EAAa;AACzC;;;;;;;;;;AClHa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,gBAAgB,mBAAO,CAAC,oEAAS;AACjC,kBAAkB,mBAAO,CAAC,wEAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;ACnEa;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,oEAAS;AAC9B,aAAa,mBAAO,CAAC,sEAAU;AAC/B,aAAa,mBAAO,CAAC,wEAAW;AAChC,aAAa,mBAAO,CAAC,4EAAa;AAClC,aAAa,mBAAO,CAAC,gFAAe;AACpC","sources":["webpack://xircuits/./node_modules/@projectstorm/geometry/dist/BezierCurve.js","webpack://xircuits/./node_modules/@projectstorm/geometry/dist/Matrix.js","webpack://xircuits/./node_modules/@projectstorm/geometry/dist/Point.js","webpack://xircuits/./node_modules/@projectstorm/geometry/dist/Polygon.js","webpack://xircuits/./node_modules/@projectstorm/geometry/dist/Rectangle.js","webpack://xircuits/./node_modules/@projectstorm/geometry/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BezierCurve = exports.BezierCurvepPoints = void 0;\nconst Point_1 = require(\"./Point\");\nconst Polygon_1 = require(\"./Polygon\");\nvar BezierCurvepPoints;\n(function (BezierCurvepPoints) {\n    BezierCurvepPoints[BezierCurvepPoints[\"SOURCE\"] = 0] = \"SOURCE\";\n    BezierCurvepPoints[BezierCurvepPoints[\"SOURCE_CONTROL\"] = 1] = \"SOURCE_CONTROL\";\n    BezierCurvepPoints[BezierCurvepPoints[\"TARGET_CONTROL\"] = 2] = \"TARGET_CONTROL\";\n    BezierCurvepPoints[BezierCurvepPoints[\"TARGET\"] = 3] = \"TARGET\";\n})(BezierCurvepPoints = exports.BezierCurvepPoints || (exports.BezierCurvepPoints = {}));\nclass BezierCurve extends Polygon_1.Polygon {\n    constructor() {\n        super([new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0)]);\n    }\n    getSVGCurve() {\n        return `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n    }\n    setPoints(points) {\n        if (points.length !== 4) {\n            throw new Error('BezierCurve must have extactly 4 points');\n        }\n        super.setPoints(points);\n    }\n    getSource() {\n        return this.points[BezierCurvepPoints.SOURCE];\n    }\n    getSourceControl() {\n        return this.points[BezierCurvepPoints.SOURCE_CONTROL];\n    }\n    getTargetControl() {\n        return this.points[BezierCurvepPoints.TARGET_CONTROL];\n    }\n    getTarget() {\n        return this.points[BezierCurvepPoints.TARGET];\n    }\n    setSource(point) {\n        this.points[BezierCurvepPoints.SOURCE] = point;\n    }\n    setSourceControl(point) {\n        this.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n    }\n    setTargetControl(point) {\n        this.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n    }\n    setTarget(point) {\n        this.points[BezierCurvepPoints.TARGET] = point;\n    }\n}\nexports.BezierCurve = BezierCurve;\n//# sourceMappingURL=BezierCurve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Matrix = void 0;\nclass Matrix {\n    constructor(matrix) {\n        this.matrix = matrix;\n    }\n    mmul(matrix) {\n        this.matrix = this.matrix.map((row, i) => matrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0)));\n        return this;\n    }\n    asArray() {\n        return this.matrix;\n    }\n    get(rowIndex, columnIndex) {\n        return this.asArray()[rowIndex][columnIndex];\n    }\n}\nexports.Matrix = Matrix;\n//# sourceMappingURL=Matrix.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point = void 0;\nconst Matrix_1 = require(\"./Matrix\");\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    translate(x, y) {\n        this.x += x;\n        this.y += y;\n    }\n    clone() {\n        return new Point(this.x, this.y);\n    }\n    toSVG() {\n        return this.x + ' ' + this.y;\n    }\n    asMatrix() {\n        return new Matrix_1.Matrix([[this.x], [this.y], [1]]);\n    }\n    transform(matrix) {\n        let final = matrix.mmul(this.asMatrix());\n        this.x = final.get(0, 0);\n        this.y = final.get(1, 0);\n    }\n    static middlePoint(pointA, pointB) {\n        return new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n    }\n    static multiply(...matrices) {\n        let m = matrices[0];\n        for (let i = 1; i < matrices.length; i++) {\n            m = m.mmul(matrices[i]);\n        }\n        return m;\n    }\n    static scaleMatrix(x, y) {\n        return new Matrix_1.Matrix([\n            [x, 0, 0],\n            [0, y, 0],\n            [0, 0, 1]\n        ]);\n    }\n    static translateMatrix(x, y) {\n        return new Matrix_1.Matrix([\n            [1, 0, x],\n            [0, 1, y],\n            [0, 0, 1]\n        ]);\n    }\n    static rotateMatrix(deg) {\n        return new Matrix_1.Matrix([\n            [Math.cos(deg), -1 * Math.sin(deg), 0],\n            [Math.sin(deg), Math.cos(deg), 0],\n            [0, 0, 1]\n        ]);\n    }\n    static createScaleMatrix(x, y, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.scaleMatrix(x, y), Point.translateMatrix(-origin.x, -origin.y));\n    }\n    static createRotateMatrix(deg, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.rotateMatrix(deg), Point.translateMatrix(-origin.x, -origin.y));\n    }\n}\nexports.Point = Point;\n//# sourceMappingURL=Point.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Polygon = void 0;\nconst Point_1 = require(\"./Point\");\nconst _ = require(\"lodash\");\nclass Polygon {\n    constructor(points = []) {\n        this.points = points;\n    }\n    serialize() {\n        return _.map(this.points, (point) => {\n            return [point.x, point.y];\n        });\n    }\n    deserialize(data) {\n        this.points = _.map(data, (point) => {\n            return new Point_1.Point(point[0], point[1]);\n        });\n    }\n    scale(x, y, origin) {\n        let matrix = Point_1.Point.createScaleMatrix(x, y, origin);\n        _.forEach(this.points, (point) => {\n            point.transform(matrix);\n        });\n    }\n    transform(matrix) {\n        _.forEach(this.points, (point) => {\n            point.transform(matrix);\n        });\n    }\n    setPoints(points) {\n        this.points = points;\n    }\n    getPoints() {\n        return this.points;\n    }\n    rotate(degrees) {\n        this.transform(Point_1.Point.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n    }\n    translate(offsetX, offsetY) {\n        _.forEach(this.points, (point) => {\n            point.translate(offsetX, offsetY);\n        });\n    }\n    doClone(ob) {\n        this.points = _.map(ob.points, (point) => {\n            return point.clone();\n        });\n    }\n    clone() {\n        let ob = Object.create(this);\n        ob.doClone(this);\n        return ob;\n    }\n    getOrigin() {\n        if (this.points.length === 0) {\n            return null;\n        }\n        let dimensions = this.getBoundingBox();\n        return Point_1.Point.middlePoint(dimensions.getTopLeft(), dimensions.getBottomRight());\n    }\n    static boundingBoxFromPolygons(polygons) {\n        return Polygon.boundingBoxFromPoints(_.flatMap(polygons, (polygon) => {\n            return polygon.getPoints();\n        }));\n    }\n    static boundingBoxFromPoints(points) {\n        if (points.length === 0) {\n            return new Rectangle_1.Rectangle(0, 0, 0, 0);\n        }\n        let minX = points[0].x;\n        let maxX = points[0].x;\n        let minY = points[0].y;\n        let maxY = points[0].y;\n        for (let i = 1; i < points.length; i++) {\n            if (points[i].x < minX) {\n                minX = points[i].x;\n            }\n            if (points[i].x > maxX) {\n                maxX = points[i].x;\n            }\n            if (points[i].y < minY) {\n                minY = points[i].y;\n            }\n            if (points[i].y > maxY) {\n                maxY = points[i].y;\n            }\n        }\n        return new Rectangle_1.Rectangle(new Point_1.Point(minX, minY), new Point_1.Point(maxX, minY), new Point_1.Point(maxX, maxY), new Point_1.Point(minX, maxY));\n    }\n    getBoundingBox() {\n        let minX = this.points[0].x;\n        let maxX = this.points[0].x;\n        let minY = this.points[0].y;\n        let maxY = this.points[0].y;\n        for (let i = 1; i < this.points.length; i++) {\n            if (this.points[i].x < minX) {\n                minX = this.points[i].x;\n            }\n            if (this.points[i].x > maxX) {\n                maxX = this.points[i].x;\n            }\n            if (this.points[i].y < minY) {\n                minY = this.points[i].y;\n            }\n            if (this.points[i].y > maxY) {\n                maxY = this.points[i].y;\n            }\n        }\n        return new Rectangle_1.Rectangle(new Point_1.Point(minX, minY), new Point_1.Point(maxX, minY), new Point_1.Point(maxX, maxY), new Point_1.Point(minX, maxY));\n    }\n}\nexports.Polygon = Polygon;\nconst Rectangle_1 = require(\"./Rectangle\");\n//# sourceMappingURL=Polygon.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rectangle = void 0;\nconst Point_1 = require(\"./Point\");\nconst Polygon_1 = require(\"./Polygon\");\nclass Rectangle extends Polygon_1.Polygon {\n    constructor(a = 0, b = 0, c = 0, d = 0) {\n        if (a instanceof Point_1.Point && b instanceof Point_1.Point && c instanceof Point_1.Point && d instanceof Point_1.Point) {\n            super([a, b, c, d]);\n        }\n        else if (a instanceof Point_1.Point) {\n            super([a, new Point_1.Point(a.x + b, a.y), new Point_1.Point(a.x + b, a.y + c), new Point_1.Point(a.x, a.y + c)]);\n        }\n        else {\n            super(Rectangle.pointsFromBounds(a, b, c, d));\n        }\n    }\n    static pointsFromBounds(x, y, width, height) {\n        return [new Point_1.Point(x, y), new Point_1.Point(x + width, y), new Point_1.Point(x + width, y + height), new Point_1.Point(x, y + height)];\n    }\n    updateDimensions(x, y, width, height) {\n        this.points = Rectangle.pointsFromBounds(x, y, width, height);\n    }\n    setPoints(points) {\n        if (points.length !== 4) {\n            throw 'Rectangles must always have 4 points';\n        }\n        super.setPoints(points);\n    }\n    containsPoint(point) {\n        const tl = this.getTopLeft();\n        const br = this.getBottomRight();\n        return point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n    }\n    getWidth() {\n        return Math.sqrt(Math.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2));\n    }\n    getHeight() {\n        return Math.sqrt(Math.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n            Math.pow(this.getBottomLeft().y - this.getTopLeft().y, 2));\n    }\n    getTopMiddle() {\n        return Point_1.Point.middlePoint(this.getTopLeft(), this.getTopRight());\n    }\n    getBottomMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n    }\n    getLeftMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n    }\n    getRightMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomRight(), this.getTopRight());\n    }\n    getTopLeft() {\n        return this.points[0];\n    }\n    getTopRight() {\n        return this.points[1];\n    }\n    getBottomRight() {\n        return this.points[2];\n    }\n    getBottomLeft() {\n        return this.points[3];\n    }\n}\nexports.Rectangle = Rectangle;\n//# sourceMappingURL=Rectangle.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Point\"), exports);\n__exportStar(require(\"./Matrix\"), exports);\n__exportStar(require(\"./Polygon\"), exports);\n__exportStar(require(\"./Rectangle\"), exports);\n__exportStar(require(\"./BezierCurve\"), exports);\n//# sourceMappingURL=index.js.map"],"names":[],"sourceRoot":""}