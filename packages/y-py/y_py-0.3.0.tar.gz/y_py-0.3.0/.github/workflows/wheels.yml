name: Build

on: [push, pull_request]

jobs:
  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: install dependencies
        run: |
          pip install --upgrade pip build
      - name: build sdist
        run: |
          python -m build --sdist .
      - uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: "dist/*.tar.gz"
          if-no-files-found: error

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          echo $PYPI_USERNAME
          pip install twine
          python -m twine upload --skip-existing dist/*.tar.gz

  wheel:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    env:
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_SKIP: "cp27-* cp34-* cp35-* cp36-* pp* *-win32 *-musllinux*"

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*
          if-no-files-found: error

      - name: Publish wheels to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          python -m twine upload --skip-existing ./wheelhouse/*
