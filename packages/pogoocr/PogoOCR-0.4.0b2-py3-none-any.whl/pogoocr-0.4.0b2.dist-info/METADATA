Metadata-Version: 2.1
Name: pogoocr
Version: 0.4.0b2
Summary: A Python tool for running OCR on Pokemon Go Screenshots
Home-page: https://github.com/TrainerDex/PogoOCR
License: GPL-3.0-or-later
Author: Jay Turner
Author-email: jay@trainerdex.app
Requires-Python: >=3.8.2,<3.11
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.9
Provides-Extra: aiohttp
Requires-Dist: aiohttp (>=3.8.1,<4.0.0); extra == "aiohttp"
Requires-Dist: babel (>=2.0.0)
Requires-Dist: colormath (>=3.0.0,<4.0.0)
Requires-Dist: colour (>=0.1.5,<0.2.0)
Requires-Dist: google-cloud-vision (>=2.7.1,<3.0.0)
Requires-Dist: numpy (>=1.22.0)
Requires-Dist: pillow (>=8.3.2)
Requires-Dist: python-dateutil (>=2.8.2,<3.0.0)
Requires-Dist: requests (>=2.27.1,<3.0.0)
Project-URL: Repository, https://github.com/TrainerDex/PogoOCR
Description-Content-Type: text/markdown

[![Support Server](https://img.shields.io/discord/614101299197378571.svg?color=7289da&label=Support&logo=discord&style=flat)](https://discord.gg/pdxh7P)
[![PyPi version](https://badgen.net/pypi/v/PogoOCR/)](https://pypi.com/project/PogoOCR)
[![Maintenance](https://img.shields.io/static/v1?label=Maintained?&message=yes&color=success&style=flat)](#)
[![wakatime](https://wakatime.com/badge/github/TrainerDex/PogoOCR.svg?style=flat)](https://wakatime.com/badge/github/TrainerDex/PogoOCR)
[![codecov](https://codecov.io/gh/TrainerDex/PogoOCR/branch/develop/graph/badge.svg?token=LABKE6I5RL)](https://codecov.io/gh/TrainerDex/PogoOCR)

A Python tool for running OCR on PokÃ©mon Screenshots using Google Cloud Vision


Usage:

```py
import PogoOCR
from google.oauth2 import service_account

credentials: service_account.Credentials

client = PogoOCR.OCRClient(credentials=credentials)
screenshot = PogoOCR.Screenshot.from_url(
    url="...",
    klass=PogoOCR.ScreenshotClass.ACTIVITY_VIEW,
)

request = client.open_request(screenshot, PogoOCR.Language.ENGLISH)

result = client.process_ocr(request)
```

