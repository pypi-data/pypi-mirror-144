name: Test against stable

on:
  workflow_dispatch:

jobs:

  tests-and-coverage-pip-stable:
    name: Tests and coverage (pip, Python ${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: [3.7, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install gpytorch
        pip install .[test]
    - name: Unit tests and coverage
      run: |
        pytest -ra --cov=. --cov-report term-missing

  tests-conda-stable:
    name: Tests (conda, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.9"]
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        activate-environment: test
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda install -y -c pytorch pytorch cpuonly
        conda install -y pip scipy pytest
        conda install -y -c gpytorch gpytorch
        conda install -y -c conda-forge pyro-ppl==1.8.0
        pip install .[test]
    - name: Unit tests
      shell: bash -l {0}
      run: |
        pytest -ra

  tests-and-coverage-min-req-pip:
    name: Tests and coverage min req. torch & gpytorch versions (pip, Python ${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: [3.7, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python setup.py egg_info
        req_txt="botorch.egg-info/requires.txt"
        min_torch_version=$(grep '\btorch>=' ${req_txt} | sed 's/[^0-9.]//g')
        min_gpytorch_version=$(grep '\bgpytorch>=' ${req_txt} | sed 's/[^0-9.]//g')
        pip install "torch==${min_torch_version}" "gpytorch==${min_gpytorch_version}"
        pip install .[test]
    - name: Unit tests and coverage
      run: |
        pytest -ra --cov=. --cov-report term-missing

  run_tutorials_stable_w_latest_ax:
    name: Run tutorials without smoke test on min req. versions of torch & gpytorch and latest Ax
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Fetch all history for all tags and branches
      # we need to do this so setuptools_scm knows how to set the botorch version
      run: git fetch --prune --unshallow
    - name: Install dependencies
      env:
        # this is so Ax's setup doesn't install a pinned BoTorch version
        ALLOW_BOTORCH_LATEST: true
      run: |
        python setup.py egg_info
        req_txt="botorch.egg-info/requires.txt"
        min_torch_version=$(grep '\btorch>=' ${req_txt} | sed 's/[^0-9.]//g')
        min_gpytorch_version=$(grep '\bgpytorch>=' ${req_txt} | sed 's/[^0-9.]//g')
        pip install "torch==${min_torch_version}" "gpytorch==${min_gpytorch_version}"
        pip install git+https://github.com/facebook/Ax.git
        pip install .[tutorials]
    - name: Run tutorials
      run: |
        python scripts/run_tutorials.py -p "$(pwd)"

  run_tutorials_stable_w_stable_ax:
    name: Run tutorials without smoke test on min req. versions of torch & gpytorch and stable Ax
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Fetch all history for all tags and branches
      # we need to do this so setuptools_scm knows how to set the botorch version
      run: git fetch --prune --unshallow
    - name: Install dependencies
      env:
        # this is so Ax's setup doesn't install a pinned BoTorch version
        ALLOW_BOTORCH_LATEST: true
      run: |
        python setup.py egg_info
        req_txt="botorch.egg-info/requires.txt"
        min_torch_version=$(grep '\btorch>=' ${req_txt} | sed 's/[^0-9.]//g')
        min_gpytorch_version=$(grep '\bgpytorch>=' ${req_txt} | sed 's/[^0-9.]//g')
        pip install "torch==${min_torch_version}" "gpytorch==${min_gpytorch_version}"
        pip install .[tutorials]
    - name: Run tutorials
      run: |
        python scripts/run_tutorials.py -p "$(pwd)"
