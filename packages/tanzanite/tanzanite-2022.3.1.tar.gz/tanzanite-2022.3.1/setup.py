# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['tanzanite',
 'tanzanite.backend.app.alembic',
 'tanzanite.backend.app.alembic.versions',
 'tanzanite.backend.app.app',
 'tanzanite.backend.app.app.api',
 'tanzanite.backend.app.app.api.v1',
 'tanzanite.backend.app.app.api.v1.endpoints',
 'tanzanite.backend.app.app.core',
 'tanzanite.backend.app.app.crud',
 'tanzanite.backend.app.app.db',
 'tanzanite.backend.app.app.models',
 'tanzanite.backend.app.app.schemas',
 'tanzanite.cli',
 'tanzanite.cli.challenge',
 'tanzanite.cli.db',
 'tanzanite.cli.server',
 'tanzanite.cli.user',
 'tanzanite.core',
 'tanzanite.utils',
 'tanzanite.webapps',
 'tanzanite.webapps.auth',
 'tanzanite.webapps.challenges',
 'tanzanite.webapps.users']

package_data = \
{'': ['*'],
 'tanzanite': ['backend/*',
               'backend/app/*',
               'backend/app/scripts/*',
               'scripts/*',
               'static/css/*',
               'static/images/*',
               'static/images/icons/*',
               'static/js/*',
               'static/screenshots/*'],
 'tanzanite.backend.app.app': ['email-templates/src/*'],
 'tanzanite.webapps': ['templates/auth/*',
                       'templates/challenges/*',
                       'templates/components/*',
                       'templates/general_pages/*',
                       'templates/shared/*',
                       'templates/users/*']}

install_requires = \
['Jinja2==2.11.3',
 'MarkupSafe==2.0.1',
 'PyJWT>=2.3.0,<3.0.0',
 'SQLAlchemy-Utils>=0.38.1,<0.39.0',
 'Sphinx>=4.3.2,<5.0.0',
 'aiofiles>=0.8.0,<0.9.0',
 'alembic>=1.4.2,<2.0.0',
 'celery>=4.4.2,<5.0.0',
 'databases[postgresql,sqlite]>=0.5.3,<0.6.0',
 'email-validator>=1.0.5,<2.0.0',
 'emails>=0.6,<0.7',
 'fastapi>=0.54.1,<0.55.0',
 'gunicorn>=20.0.4,<21.0.0',
 'httpx>=0.22.0,<0.23.0',
 'isort>=5.10.1,<6.0.0',
 'itsdangerous>=2.1.0,<3.0.0',
 'jinja2>=2.11.2,<3.0.0',
 'passlib[bcrypt]>=1.7.2,<2.0.0',
 'poetry2setup>=1.0.0,<2.0.0',
 'psycopg2-binary>=2.8.5,<3.0.0',
 'pydantic>=1.9.0,<2.0.0',
 'pytest>=5.4.1,<6.0.0',
 'python-dotenv>=0.19.2,<0.20.0',
 'python-jose[cryptography]>=3.1.0,<4.0.0',
 'python-multipart>=0.0.5,<0.0.6',
 'python-secrets>=22.1.0,<23.0.0',
 'raven>=6.10.0,<7.0.0',
 'requests>=2.23.0,<3.0.0',
 'setuptools>=60.9.3,<61.0.0',
 'sphinx-rtd-theme>=1.0.0,<2.0.0',
 'sqlalchemy>=1.3.16,<2.0.0',
 'tenacity>=6.1.0,<7.0.0',
 'uvicorn>=0.17.1,<0.18.0']

entry_points = \
{'console_scripts': ['tanzanite = tanzanite.__main__:main',
                     'tz = tanzanite.__main__:main'],
 'tanzanite': ['about = tanzanite.cli.about:CmdAbout',
               'api start = tanzanite.cli.server.start:CmdStartAPI',
               'challenge create = '
               'tanzanite.cli.challenge.create:CmdChallengeCreate',
               'challenge delete = '
               'tanzanite.cli.challenge.delete:CmdChallengeDelete',
               'challenge list = tanzanite.cli.challenge.list:CmdChallengeList',
               'challenge show = tanzanite.cli.challenge.show:CmdChallengeShow',
               'challenge update = '
               'tanzanite.cli.challenge.update:CmdChallengeUpdate',
               'db init = tanzanite.cli.db.init:CmdDBInit',
               'db summary = tanzanite.cli.db.summary:CmdDBSummary',
               'login = tanzanite.cli.login:CmdLogin',
               'logout = tanzanite.cli.login:CmdLogout',
               'run = psec.run:Run',
               'ssh config = psec.ssh:SSHConfig',
               'ssh known-hosts add = psec.ssh:SSHKnownHostsAdd',
               'ssh known-hosts extract = psec.ssh:SSHKnownHostsExtract',
               'ssh known-hosts remove = psec.ssh:SSHKnownHostsRemove',
               'template = psec.template:Template',
               'user create = tanzanite.cli.user.create:CmdUserCreate',
               'user delete = tanzanite.cli.user.delete:CmdUserDelete',
               'user list = tanzanite.cli.user.list:CmdUserList',
               'user notify = tanzanite.cli.user.notify:CmdUserNotify',
               'user summary = tanzanite.cli.user.summary:CmdUserSummary',
               'user update = tanzanite.cli.user.update:CmdUserUpdate',
               'utils myip = psec.utils.myip:MyIP',
               'utils myip methods = psec.utils.myip:MyIPMethods',
               'utils netblock = psec.utils.netblock:Netblock',
               'utils set-aws-credentials = '
               'psec.utils.set_aws_credentials:SetAWSCredentials',
               'utils tfstate backend = psec.utils.tfbackend:TfBackend',
               'utils tfstate output = psec.utils.tfoutput:TfOutput',
               'utils yaml-to-json = psec.utils.yaml_to_json:YAMLToJSON',
               'webapp = tanzanite.cli.webapp:CmdWebapp']}

setup_kwargs = {
    'name': 'tanzanite',
    'version': '2022.3.1',
    'description': 'An open source purpleteaming and CTF platform.',
    'long_description': '.. tanzanite documentation main file, created by\n   cookiecutter on 2021-09-24.\n\ntanzanite\n=========\n\n|Versions| |Contributors| |License| |Docs|\n\n.. |Versions| image:: https://img.shields.io/pypi/pyversions/tanzanite.svg\n   :target: https://pypi.org/project/tanzanite\n.. |Contributors| image:: https://img.shields.io/github/contributors/davedittrich/tanzanite.svg\n   :target: https://github.com/davedittrich/tanzanite/graphs/contributors\n.. |License| image:: https://img.shields.io/github/license/davedittrich/tanzanite.svg\n   :target: https://github.com/davedittrich/tanzanite/blob/main/LICENSE.txt\n.. |Docs| image:: https://readthedocs.org/projects/tanzanite/badge/?version=latest\n   :target: https://tanzanite.readthedocs.io\n\n**Tanzanite** is an open source platform for managing users and compute instances\nwhen running *purpleteam* training sessions, cyber exercises, and "*capture the\nflag*" contests.\n\n* Version: 2022.3.1\n* GitHub repo: https://github.com/davedittrich/tanzanite/\n* License: Apache Software License 2.0\n\n\n.. README_FEATURES:\n\nFeatures\n--------\n\n* The ``tanzanite`` platform provides two user interfaces on the front end.\n\n  + The first is a general Python command line interface (CLI) built\n    on the OpenStack `cliff`_ (Command Line Interface Formulation Framework).\n\n    * ``cliff`` provides many useful features like modularizing subcommands into\n      groups, built-in help for internally documenting commands, and producing\n      output in clean tabular form or in one of several data formats you can\n      feed into other tools or automation platforms.\n\n    * The CLI not only makes developing and testing API features faster and\n      easier, but it also enables better integration with other open source\n      tools through scripting and provides a quick remote interface for those\n      running an exercise or CTF.\n\n  + The second is a basic web application GUI.\n   \n    * The web app is served by FastAPI along with the API using Jinja2\n      HTML templates.\n     \n    * The built-in OpenAPI schema interface will help you write your own custom\n      GUI or integrate Tanzanite with your own web application front end.\n\n* Both of these front ends access the backend database, compute instance\n  management, and related services via an API based on the `FastAPI`_\n  framework.\n\n  + Configuration settings and storage of sensitive data on the backend\n    uses a `Python Secrets`_ (`psec`) environment. This decouples storage\n    of secrets from source code, making it easier and safer to develop\n    and test new features or proprietary enhancements to the system.\n\n  + The `sqlalchemy`_ SQL toolkit and Object Relational Mapper are used\n    for generalizing access to local or remote databases. Local database\n    support for testing and interactive debugging uses `sqlite3`_, while\n    Postgres is supported for more robust production deployments.\n\n* The platform is parially self-documenting through integration of `Sphinx`_\n  documentation for generation both locally and through `ReadTheDocs`_. CLI\n  commands are documented using ``cliff`` autoprogram `Sphinx integration`_,\n  giving you the same output you get using the ``--help`` flag on the command\n  line.\n\n* The source repository comes preconfigured for unit testing with `pytest`_,\n  Python security vulnerability scanning with `bandit`_, integration and\n  system testing with BATS (`bats-core`_), and Python library dependency\n  security scanning with GitHub\'s `dependabot`_.\n\n* Support for testing against multiple versions of Python is handled by `Tox`_.\n\n* Interactive development and debugging is supported by pre-configuration\n  of `VSCode`_, allowing easy debugging of the CLI client components, the\n  web application components and server backend, or even the client components\n  and server at the same time.\n\n* Version numbering for development and test versions follows a date-based\n  versioning scheme tracking Git repository status. Version number\n  bumping is managed using `bump2version`_.\n\n* Development and production testing and release workflows are processed by\n  `GitHub Actions`_ with automatic package publication to `PyPI`_ or\n  `Test PyPI`_ when you push a new version tag on the ``main`` branch, or\n  a special ``rc`` tag on the ``develop`` branch.\n\n\nContact\n-------\n\nDave Dittrich <dave.dittrich@gmail.com>\n\n.. |copy|   unicode:: U+000A9 .. COPYRIGHT SIGN\n\nCopyright |copy| 2019-2021 Dave Dittrich. All rights reserved.\n\nCredits\n-------\n\nThis package was created with `Cookiecutter`_ from the\n<https://github.com/davedittrich/cookiecutter-cliffapp-template> project template.  It\nderives some of its features and inspiration from\n<https://github.com/veit/cookiecutter-namespace-template> and\n<https://github.com/audreyfeldroy/cookiecutter-pypackage>.\n\n\n.. _cliff: https://github.com/openstack/cliff\n.. _FastAPI: https://fastapi.tiangolo.com/\n.. _Python Secrets: https://pypi.org/project/python-secrets\n.. _sqlalchemy: https://www.sqlalchemy.org\n.. _sqlite3: https://sqlite.org/cli.html\n.. _Sphinx: http://www.sphinx-doc.org/\n.. _Sphinx integration: https://docs.openstack.org/cliff/latest/user/sphinxext.html\n.. _ReadTheDocs: https://readthedocs.com\n.. _pytest: https://docs.pytest.org/en/stable/\n.. _bandit: https://bandit.readthedocs.io\n.. _bats-core: https://bats-core.readthedocs.io\n.. _dependabot: https://docs.github.com/en/code-security/supply-chain-security/configuring-dependabot-security-updates\n.. _VSCode: https://code.visualstudio.com\n.. _Tox: https://tox.readthedocs.io/\n.. _bump2version: https://github.com/c4urself/bump2version\n.. _GitHub Actions: https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions\n.. _PyPI: https://pypi.org/\n.. _Test PyPI: https://test.pypi.org\n.. _Cookiecutter: https://github.com/cookiecutter/cookiecutter\n\n\n.. EOF\n',
    'author': 'Dave Dittrich',
    'author_email': 'dave.dittrich@gmail.com',
    'maintainer': 'Dave Dittrich',
    'maintainer_email': 'dave.dittrich@gmail.com',
    'url': 'https://github.com/davedittrich/tanzanite',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.7,<4.0',
}


setup(**setup_kwargs)
