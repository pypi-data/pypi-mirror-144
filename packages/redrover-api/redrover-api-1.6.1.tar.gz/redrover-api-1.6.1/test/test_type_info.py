"""
    Red Rover API

    Access Red Rover data via this REST API for Organizations that have granted you access.    # Authentication  The API is protected by HTTP Basic Authentication.   Each application that connects to the API has a unique username and password that it must supply with every request.    This value needs to be supplied as an HTTP Header: `Authorization=BASIC [hash]`. The value of [hash] is the string username:password base64 encoded.    Endpoints marked for Basic Auth can be used with the Basic Auth username and password that you have been assigned.    # API Information  ## Api Key  Each Red Rover organization that has authorized your application has a unique API Key for your application.  To retrieve the API Key, you can use the Organization endpoint (`api/v1/organization`) which returns an ApiKey uniquely used for each Organization.    You must supply this as an HTTP Header when accessing that organization: `apiKey=[apiKey]`. The domains that require this `ApiKey` header are labeled as 'Requires an ApiKey'.    ## Identifier  Where an `Identifier` can be specified in the route, you may either supply the Red Rover Id of the object (numeric) or the External Id (alpha-numeric). When specifying an External Id, you will need to prepend the External Id with the pike character`|` (e.g. `|ABC123`).  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: dev@redroverk12.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import redrover_api
from redrover_api.model.assembly import Assembly
from redrover_api.model.constructor_info import ConstructorInfo
from redrover_api.model.custom_attribute_data import CustomAttributeData
from redrover_api.model.event_info import EventInfo
from redrover_api.model.field_info import FieldInfo
from redrover_api.model.member_info import MemberInfo
from redrover_api.model.method_base import MethodBase
from redrover_api.model.method_info import MethodInfo
from redrover_api.model.module import Module
from redrover_api.model.property_info import PropertyInfo
from redrover_api.model.runtime_type_handle import RuntimeTypeHandle
from redrover_api.model.struct_layout_attribute import StructLayoutAttribute
from redrover_api.model.type import Type
globals()['Assembly'] = Assembly
globals()['ConstructorInfo'] = ConstructorInfo
globals()['CustomAttributeData'] = CustomAttributeData
globals()['EventInfo'] = EventInfo
globals()['FieldInfo'] = FieldInfo
globals()['MemberInfo'] = MemberInfo
globals()['MethodBase'] = MethodBase
globals()['MethodInfo'] = MethodInfo
globals()['Module'] = Module
globals()['PropertyInfo'] = PropertyInfo
globals()['RuntimeTypeHandle'] = RuntimeTypeHandle
globals()['StructLayoutAttribute'] = StructLayoutAttribute
globals()['Type'] = Type
from redrover_api.model.type_info import TypeInfo


class TestTypeInfo(unittest.TestCase):
    """TypeInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testTypeInfo(self):
        """Test TypeInfo"""
        # FIXME: construct object with mandatory attributes with example values
        # model = TypeInfo()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
