{"version":3,"sources":["webpack:///./src/components/panels/MusicSpotify/Index.vue","webpack:///./src/components/panels/MusicSpotify/Index.vue?1932"],"names":["plugin-name","loading","config","tracks","status","playlists","edited-playlist","editedPlaylist","edited-playlist-tracks","editedPlaylistTracks","track-info","trackInfo","search-results","searchResults","library-results","libraryResults","path","devices","selected-device","selectedDevice","active-device","activeDevice","play","pause","stop","previous","next","clear","setVolume","seek","consume","random","repeat","refreshStatus","removeFromTracklist","addToTracklist","swapTracks","loadPlaylist","playPlaylist","removePlaylist","moveTracklistTracks","saveToPlaylist","playlistEditChanged","addToTracklistFromEditedPlaylist","removeFromPlaylist","$event","playlistAdd","addToPlaylist","playlistTrackMove","search","cd","refresh","selectDevice","name","components","Loading","MusicPlugin","mixins","Utils","props","type","Object","default","data","methods","refreshTracks","background","request","map","track","time","duration","reduce","obj","device","id","activeDevices","values","filter","is_active","length","playingPos","refreshPlaylists","sort","a","b","localeCompare","Promise","all","event","pos","uri","resource","volume","position","value","file","method","positions","resources","playlist","_loadPlaylist","notify","text","list","playlistIdx","from_pos","from","to_pos","to","query","item","deviceId","mounted","this","render"],"mappings":"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","file":"static/js/chunk-746dfdf7.996f7b5a.js","sourcesContent":["<template>\n  <Loading v-if=\"loading\" />\n  <MusicPlugin plugin-name=\"music.spotify\" :loading=\"loading\" :config=\"config\" :tracks=\"tracks\" :status=\"status\"\n               :playlists=\"playlists\" :edited-playlist=\"editedPlaylist\" :edited-playlist-tracks=\"editedPlaylistTracks\"\n               :track-info=\"trackInfo\" :search-results=\"searchResults\" :library-results=\"libraryResults\" :path=\"path\"\n               :devices=\"devices\" :selected-device=\"selectedDevice\" :active-device=\"activeDevice\" @play=\"play\"\n               @pause=\"pause\" @stop=\"stop\" @previous=\"previous\" @next=\"next\" @clear=\"clear\" @set-volume=\"setVolume\"\n               @seek=\"seek\" @consume=\"consume\" @random=\"random\" @repeat=\"repeat\" @status-update=\"refreshStatus(true)\"\n               @new-playing-track=\"refreshStatus(true)\" @remove-from-tracklist=\"removeFromTracklist\"\n               @add-to-tracklist=\"addToTracklist\" @swap-tracks=\"swapTracks\" @load-playlist=\"loadPlaylist\"\n               @play-playlist=\"playPlaylist\" @remove-playlist=\"removePlaylist\" @tracklist-move=\"moveTracklistTracks\"\n               @tracklist-save=\"saveToPlaylist\" @playlist-edit=\"playlistEditChanged\" @refresh-status=\"refreshStatus\"\n               @add-to-tracklist-from-edited-playlist=\"addToTracklistFromEditedPlaylist\"\n               @remove-from-playlist=\"removeFromPlaylist\" @info=\"trackInfo = $event\" @playlist-add=\"playlistAdd\"\n               @add-to-playlist=\"addToPlaylist\" @playlist-track-move=\"playlistTrackMove\" @search=\"search\"\n               @search-clear=\"searchResults = []\" @cd=\"cd\" @playlist-update=\"refresh(true)\"\n               @select-device=\"selectDevice\" />\n</template>\n\n<script>\nimport MusicPlugin from \"@/components/panels/Music/Index\";\nimport Utils from \"@/Utils\";\nimport Loading from \"@/components/Loading\";\n\nexport default {\n  name: \"MusicSpotify\",\n  components: {Loading, MusicPlugin},\n  mixins: [Utils],\n  props: {\n    config: {\n      type: Object,\n      default: () => {},\n    },\n  },\n\n  data() {\n    return {\n      loading: false,\n      devices: {},\n      selectedDevice: null,\n      activeDevice: null,\n      tracks: [],\n      playlists: [],\n      status: {},\n      editedPlaylist: null,\n      editedPlaylistTracks: [],\n      trackInfo: null,\n      searchResults: [],\n      libraryResults: [],\n      path: '/',\n    }\n  },\n\n  methods: {\n    async refreshTracks(background) {\n      if (!background)\n        this.loading = true\n\n      try {\n        this.tracks = (await this.request('music.spotify.history')).map((track) => {\n          track.time = track.duration\n          return track\n        })\n      } finally {\n        this.loading = false\n      }\n    },\n\n    async refreshStatus(background) {\n      if (!background)\n        this.loading = true\n\n      this.devices = (await this.request('music.spotify.get_devices')).reduce((obj, device) => {\n        obj[device.id] = device\n        return obj\n      }, {})\n\n      const activeDevices = Object.values(this.devices).filter((device) => device.is_active)\n      this.activeDevice = activeDevices.length ? activeDevices[0].id : null\n      if (!this.selectedDevice && Object.values(this.devices).length)\n        this.selectedDevice = this.activeDevice || [...Object.values(this.devices)][0].id\n\n      try {\n        const status = await this.request('music.spotify.status')\n        this.status = {\n          ...status,\n          duration: status.time,\n        }\n      } finally {\n        this.loading = false\n      }\n\n      if (this.status.track) {\n        if (this.tracks?.[0]?.id !== this.status.track.id)\n          this.tracks = [{\n            ...this.status.track,\n            time: this.status.duration,\n          }, ...this.tracks]\n        this.status.playingPos = 0\n      }\n    },\n\n    async refreshPlaylists(background) {\n      if (!background)\n        this.loading = true\n\n      try {\n        this.playlists = (await this.request('music.spotify.get_playlists'))\n            .sort((a, b) => a.name.localeCompare(b.name))\n      } finally {\n        this.loading = false\n      }\n    },\n\n    async refresh(background) {\n      if (!background)\n        this.loading = true\n\n      try {\n        await Promise.all([\n          this.refreshTracks(background),\n          this.refreshStatus(background),\n          this.refreshPlaylists(background),\n        ])\n      } finally {\n        this.loading = false\n      }\n    },\n\n    async play(event) {\n      if (event?.pos != null)\n        event.uri = this.tracks[event.pos].uri\n\n      if (event?.uri) {\n        await this.request('music.spotify.play', {\n          resource: event.uri,\n          device: this.selectedDevice,\n        })\n      } else {\n        await this.request('music.spotify.play', {\n          device: this.selectedDevice,\n        })\n      }\n\n      await this.refreshStatus(true)\n    },\n\n    async pause() {\n      await this.request('music.spotify.pause', {\n        device: this.selectedDevice,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async stop() {\n      await this.request('music.spotify.stop', {\n        device: this.selectedDevice,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async previous() {\n      await this.request('music.spotify.previous', {\n        device: this.selectedDevice,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async next() {\n      await this.request('music.spotify.next', {\n        device: this.selectedDevice,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async clear() {},\n\n    async setVolume(volume) {\n      if (volume === this.status.volume)\n        return\n\n      await this.request('music.spotify.set_volume', {\n        device: this.selectedDevice,\n        volume: volume,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async seek(pos) {\n      await this.request('music.spotify.seek', {\n        device: this.selectedDevice,\n        position: pos,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async repeat() {\n      await this.request('music.spotify.repeat', {\n        device: this.selectedDevice,\n        value: !this.status?.repeat,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async random() {\n      await this.request('music.spotify.random', {\n        device: this.selectedDevice,\n        value: !this.status?.random,\n      })\n      await this.refreshStatus(true)\n    },\n\n    async consume() {},\n\n    async addToTracklist(resource) {\n      if (resource.file)\n        resource = resource.file\n\n      await this.request('music.spotify.add', {\n        device: this.selectedDevice,\n        resource: resource,\n      })\n      await this.refresh(true)\n    },\n\n    async addToTracklistFromEditedPlaylist(event) {\n      const track = this.editedPlaylistTracks[event.pos]\n      if (!track)\n        return\n\n      const method = event.play ? 'play' : 'add'\n      await this.request(`music.spotify.${method}`, {\n        device: this.selectedDevice,\n        resource: track.uri\n      })\n      await this.refresh(true)\n    },\n\n    async removeFromPlaylist(positions) {\n      const tracks = positions.map((pos) => this.playlists[this.editedPlaylist].tracks[pos].uri)\n      await this.request('music.spotify.remove_from_playlist',\n          {resources: tracks, playlist: this.playlists[this.editedPlaylist].name})\n      await this.playlistEditChanged(this.editedPlaylist)\n    },\n\n    async removeFromTracklist() {},\n    async swapTracks() {},\n\n    async playPlaylist(position) {\n      await this._loadPlaylist(position, true)\n    },\n\n    async loadPlaylist(position) {\n      await this._loadPlaylist(position, false)\n    },\n\n    async _loadPlaylist(position) {\n      const playlist = this.playlists[position]\n      await this.request('music.spotify.play', {\n        resource: playlist.uri,\n        device: this.selectedDevice,\n      })\n      await this.refresh(true)\n    },\n\n    async removePlaylist() {\n      this.notify({\n        text: 'Playlist removal is not supported'\n      })\n    },\n\n    async saveToPlaylist() {},\n    async moveTracklistTracks() {},\n\n    async playlistAdd(track) {\n      await this.request('music.spotify.add_to_playlist', {\n        resources: [track],\n        playlist: this.playlists[this.editedPlaylist].uri\n      })\n\n      await this.playlistEditChanged(this.editedPlaylist)\n    },\n\n    async playlistEditChanged(playlist) {\n      this.editedPlaylist = playlist\n      if (playlist == null)\n        return\n\n      this.loading = true\n      try {\n        const list = await this.request('music.spotify.get_playlist', {\n          playlist: this.playlists[playlist].uri\n        })\n\n        this.editedPlaylistTracks = list.tracks.map((track) => {\n          track.time = track.duration\n          return track\n        })\n      } finally {\n        this.loading = false\n      }\n    },\n\n    async addToPlaylist(event) {\n      await Promise.all(event.playlists.map(async (playlistIdx) => {\n        await this.request('music.spotify.add_to_playlist', {\n          resources: [event.track.uri],\n          playlist: this.playlists[playlistIdx].uri\n        })\n\n        await this.playlistEditChanged(playlistIdx)\n      }))\n    },\n\n    async playlistTrackMove(event) {\n      await this.request('music.spotify.playlist_move', {\n        playlist: this.playlists[event.playlist].uri,\n        from_pos: event.from-1,\n        to_pos: event.to-1,\n      })\n\n      await this.playlistEditChanged(event.playlist)\n    },\n\n    async search(query) {\n      this.loading = true\n\n      try {\n        this.searchResults = (await this.request('music.spotify.search', query)).map((item) => {\n          item.time = item.duration\n          return item\n        })\n      } finally {\n        this.loading = false\n      }\n    },\n\n    async cd() {},\n\n    async selectDevice(deviceId) {\n      if (this.selectedDevice === deviceId)\n        return\n\n      await this.request('music.spotify.start_or_transfer_playback', {\n        device: deviceId,\n      })\n\n      this.selectedDevice = deviceId\n      this.refreshStatus(true)\n    },\n  },\n\n  mounted() {\n    this.refresh()\n  },\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=034e04ce\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}