# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['pineko', 'pineko.cli']

package_data = \
{'': ['*']}

install_requires = \
['PyYAML>=6.0,<7.0',
 'a3b2bbc3ced97675ac3a71df45f55ba>=6.4.0,<7.0.0',
 'appdirs>=1.4.4,<2.0.0',
 'click>=8.0.4,<9.0.0',
 'eko>=0.8.5,<0.9.0',
 'numpy>=1.21.0,<2.0.0',
 'pandas>=1.4.1,<2.0.0',
 'pineappl>=0.5.2,<0.6.0',
 'rich>=11.2.0,<12.0.0',
 'tomli>=2.0.1,<3.0.0']

entry_points = \
{'console_scripts': ['pineko = pineko:command']}

setup_kwargs = {
    'name': 'pineko',
    'version': '0.1.1',
    'description': 'Combine PineAPPL grids and EKOs into FK tables',
    'long_description': "# `pineko` = `PineAPPL` + `eko`\n\n`pineko` converts\n\n- interpolation grids for theory predictions ('grids' for short) in the form of\n  [`PineAPPL`](https://github.com/N3PDF/pineappl) grids, together with\n- Evolution Kernel Operators (EKO) generated by\n  [`eko`](https://github.com/N3PDF/eko)\n\ninto fast-kernel (FK) tables. The collection of all FK tables constitute the\ntheory predictions for a PDF fit and therefore is often simply called 'theory'.\n\n`pineko` replaces [`APFELcomb`](https://github.com/NNPDF/apfelcomb), which was\nused up to NNPDF4.0.\n\n## Prerequisites\n\nGenerating a 'theory', as defined above, requires several files which are\ndescribed next.\n\n### `pineko.toml`\n\nYou need to provide a `pineko.toml`, that provides all necessary paths to the input and output folders.\n[DEBUG: Look at the debug example in this repo [1].]\n\n### ymldb\n\nYou need all files of the `ymldb` [2].  [DEBUG: Look at the respective `load.sh` script to load from dom.]\nThis defines the mapping from datasets to FK tables.\n\n### Theory Runcards\n\nYou need to provide the necessary theory runcards named with their respective theory ID inside the `<paths.theory_cards>` folder [3].\n\n### Default Operator Card\n\nYou need to provide a default operator card for `eko` [4].\n[DEBUG: Look at the respective `load.sh` script to load from dom.]\n\n### Grids\n\n`pineko` does **NOT** compute grids, which are instead expected input to `pineko`.\nThere are typically two ways to obtain grids: computing them from scratch with [`runcards`](https://github.com/NNPDF/runcards)\nor reusing existing ones.\n\n#### Generate new Grids with `rr`\n\nYou need to run `rr` with a given theory runcard and put the generated grid file with the same name\ninside the `<paths.grids>/<theory_id>` folder. The name has to match the `ymldb` which is the case by default.\n\n#### Inherit Grids from Existing Theory\n\nYou can reuse the grids from a different theory by running `pineko theory inherit-grids SOURCE_THEORY_ID TARGET_THEORY_ID DATASET1 DATASET2 ...`.\nThe relation between the source theory and the target theory is non-trivial [5].\n\n## Running `pineko`\n\nRunning `pineko` consists of two steps - each of them being potentially computationally expensive:\ncomputing the EKO and convoluting the EKO with the grid.\n\n### Computing the EKO\n\n#### Generating new EKOs\n\nThis is a two step process:\n1. Generate the necessary operator cards with `pineko theory opcards THEORY_ID DATASET1 DATASET2 ...`\n2. Generate the actual EKOs with `pineko theory ekos THEORY_ID DATASET1 DATASET2 ...`\n\n#### Inherit EKOs from Existing Theory\n\nYou can reuse the EKOs from a different theory by running `pineko theory inherit-ekos SOURCE_THEORY_ID TARGET_THEORY_ID DATASET1 DATASET2 ...`.\nThe relation between the source theory and the target theory is non-trivial [6].\n\n### Generating the FK Table\n\nYou need to have the EKOs computed in the previous step.\nThen you can convolute the EKOs with the grids by running `pineko theory fks THEORY_ID DATASET1 DATASET2 ...`\n\n---\n\n[1] Actually, instead we should provide a concise description here - but let's wait to be stable first\n\n[2] this is to be replaced by the new CommonData format\n\n[3] this is to be replaced by a binding to the true theory DB\n\n[4] I'm thinking how to improve this, because how could we provide a study on the interpolation accuracy? at the moment there just equal\n\n[5] examples being SV, different evolution settings, etc.\n\n[6] examples being SV, different DIS settings, etc.\n",
    'author': 'Alessandro Candido',
    'author_email': 'alessandro.candido@mi.infn.it',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/N3PDF/pineko',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<3.11',
}


setup(**setup_kwargs)
