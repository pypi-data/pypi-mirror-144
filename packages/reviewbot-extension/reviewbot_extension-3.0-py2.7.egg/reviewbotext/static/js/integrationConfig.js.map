{"version":3,"sources":["integrationConfig.es6.js"],"names":[],"mappings":";;AAAA,CAAC,CAAC,YAAW;AACT,MAAM,KAAK,GAAG,CAAC,CAAC,UAAD,CAAf;AACA,MAAM,YAAY,GAAG,CAAC,CAAC,mBAAD,CAAtB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,EAAA,CAAC,CAAC,yBAAD,CAAD,CAA6B,CAA7B,EAAgC,UAAhC,GAA6C,IAA7C;;AAEA,MAAI,KAAK,CAAC,MAAN,KAAiB,CAAjB,IAAsB,YAAY,CAAC,MAAb,KAAwB,CAAlD,EAAqD;AAAA,QAGxC,oBAHwC,GAGjD,SAAS,oBAAT,GAAgC;AAC5B,UAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAN,EAAD,EAAc,EAAd,CAA7B;AACA,UAAI,iBAAiB,GAAG,IAAxB;AAEA,MAAA,YAAY,CAAC,IAAb,CAAkB,WAAlB,EAA+B,IAA/B,CAAoC,UAAC,CAAD,EAAI,EAAJ,EAAW;AAC3C,YAAM,GAAG,GAAG,CAAC,CAAC,EAAD,CAAb;;AAEA,YAAI,GAAG,CAAC,IAAJ,CAAS,SAAT,MAAwB,YAA5B,EAA0C;AACtC,UAAA,GAAG,CAAC,IAAJ;AACA,UAAA,iBAAiB,GAAG,GAApB;AACH,SAHD,MAGO;AACH,UAAA,GAAG,CAAC,IAAJ;AACH;AACJ,OATD;AAWA;AACZ;AACA;AACA;AACA;;AACY,UAAI,iBAAiB,KAAK,IAA1B,EAAgC;AAC5B,QAAA,iBAAiB,CAAC,GAAlB,CAAsB,eAAtB,EAAuC,CAAvC;AACA,QAAA,iBAAiB,CAAC,GAAlB,CAAsB,eAAtB,EAAuC,EAAvC;AACH,OAHD,MAGO;AACH,QAAA,iBAAiB,CAAC,GAAlB,CAAsB,eAAtB,EAAuC,CAAvC;AACH;AACJ,KA7BgD;;AACjD,QAAM,iBAAiB,GAAG,YAAY,CAAC,IAAb,EAA1B;AA8BA,IAAA,KAAK,CAAC,MAAN,CAAa;AAAA,aAAM,oBAAoB,EAA1B;AAAA,KAAb;AACA,IAAA,oBAAoB;AACvB;AACJ,CAjDA,CAAD","file":"integrationConfig.js","sourcesContent":["$(function() {\n    const $tool = $('#id_tool');\n    const $toolOptions = $('#row-tool_options');\n\n    /*\n     * Until we can update to use the subform support in Review Board 4.0, turn\n     * off all client-side validation for the form. This is required because\n     * Chrome will still attempt to validate hidden tool options inputs, and\n     * fail the form submission.\n     *\n     * For some reason, using jquery's .prop() doesn't work, so just use the\n     * bare DOM API.\n     */\n    $('#integrationconfig_form')[0].noValidate = true;\n\n    if ($tool.length === 1 && $toolOptions.length === 1) {\n        const $itemAboveOptions = $toolOptions.prev();\n\n        function changeToolVisibility() {\n            const selectedTool = parseInt($tool.val(), 10);\n            let $lastVisibleChild = null;\n\n            $toolOptions.find('.form-row').each((i, el) => {\n                const $el = $(el);\n\n                if ($el.data('tool-id') === selectedTool) {\n                    $el.show();\n                    $lastVisibleChild = $el;\n                } else {\n                    $el.hide();\n                }\n            });\n\n            /*\n             * Normally, the :last-child rule would hide this border. Instead,\n             * we have to override it because the parent has a bunch of other\n             * children after the last one that happen to be hidden.\n             */\n            if ($lastVisibleChild !== null) {\n                $lastVisibleChild.css('border-bottom', 0);\n                $itemAboveOptions.css('border-bottom', '');\n            } else {\n                $itemAboveOptions.css('border-bottom', 0);\n            }\n        }\n\n        $tool.change(() => changeToolVisibility());\n        changeToolVisibility();\n    }\n});\n"]}