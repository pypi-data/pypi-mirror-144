# Primary CI workflow
name: CI
on:
  push:
    branches:
      - master
      - develop
  pull_request:
  workflow_dispatch:
  create:
    tags:
      - 'v*'
jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Run flake8
        uses: py-actions/flake8@v1
        with:
          max-line-length: "80"
          args: "--per-file-ignores test_*.py:F401"
          path: "funfact"
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Test
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        backend: ['JAX', 'PyTorch']
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        run: tox
        env:
          BACKEND: ${{ matrix.backend }}
  coverage:
    runs-on: ubuntu-latest
    name: Coverage Test
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        run: tox -e coverage
  documentation:
    runs-on: ubuntu-latest
    name: Documentation Test
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        run: tox -e docs
