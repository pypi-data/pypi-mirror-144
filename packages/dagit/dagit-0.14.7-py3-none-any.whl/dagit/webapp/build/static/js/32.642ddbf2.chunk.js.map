{"version":3,"file":"static/js/32.642ddbf2.chunk.js","mappings":"0SAOMA,EAAe,SAACC,GACpB,IAAMC,EAAMC,KAAKC,IAAIH,GAErB,MAAM,GAAN,OAAUA,EAAK,EAAI,IAAM,KAAzB,OAA+BE,KAAKE,MAAMH,EAAM,IAAhD,YAAuDA,EAAM,GAAK,GAAK,IAAM,IAA7E,OAAkFA,EAAM,KAGpFI,EAAmBC,IAAAA,GAAAA,QAEtBC,KAAI,SAACC,GAAS,IAAD,EACNC,GAAS,UAAAH,IAAAA,GAAAA,KAAeE,UAAf,eAAqBE,UAAUC,KAAKC,SAAU,EAC7D,MAAO,CAACC,YAAY,GAAD,OAAKd,EAAaU,IAAWA,OAAAA,EAAQD,IAAAA,MAEzDM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,OAASO,EAAEP,UAEzBQ,EAAmB,CAAC,MAAO,aAAc,cAAe,aAAc,cAQtEC,EAAmB,CACvB,CACEV,IAAK,YACLK,YATgB,WAAO,IAAD,EACxB,MAAM,GAAN,QAAUM,EAAAA,EAAAA,MAAV,YAA2CpB,GACzC,UAAAO,IAAAA,GAAAA,MAAec,EAAAA,EAAAA,cAAf,eAAmCV,UAAUC,KAAKC,SAAU,IAO/CC,GACbJ,OAAQ,GAEV,CACED,IAAK,YACLK,YAAa,GACbJ,OAAQ,IATa,eAWpBJ,EAAiBgB,QAAO,SAACC,GAAD,OAAOL,EAAiBM,SAASD,EAAEd,SAXvC,CAYvB,CACEA,IAAK,YACLK,YAAa,GACbJ,OAAQ,KAfa,OAiBpBJ,EAAiBgB,QAAO,SAACC,GAAD,OAAQL,EAAiBM,SAASD,EAAEd,UAOpDgB,EAAkC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC/C,EAAgCC,EAAAA,WAAiBC,EAAAA,GAAjD,eAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,SAAC,KAAD,CACEC,aAAc,CACZC,SAAU,cACVC,UAAW,CAACvB,OAAQ,CAACwB,SAAS,EAAMxB,OAAQ,gBAE9CyB,WAAYhB,EAAoBiB,MAAK,SAACC,GAAD,OAAQA,EAAG5B,MAAQoB,KACxDS,WAAY,CAACC,MAAO,CAACC,MAAO,UAC5BC,MAAOtB,EACPuB,cAAe,SAACC,EAAON,GAAR,OAAeA,EAAG5B,IAAImC,cAAcpB,SAASmB,EAAMC,gBAClEC,aAAc,SAACR,EAAIS,GAAL,OACZT,EAAG5B,IAAIsC,WAAW,YAChB,SAAC,KAAD,GAAqBV,EAAG5B,MAExB,SAAC,KAAD,CACEuC,OAAQF,EAAMb,UAAUe,OACxBC,QAASH,EAAMI,YACfC,MAAOd,EAAGvB,YAEVsC,KAAMf,EAAG5B,KADJ4B,EAAG5B,MAKd4C,iBAAkB,YAAkC,IAAhCC,EAA+B,EAA/BA,WACZC,EAD2C,EAAnBC,cACMhD,IAAI8C,GAAYhC,OAAOmC,SAC3D,OAAO,SAAC,KAAD,UAAUF,KAEnBG,WAAW,SAAC,KAAD,CAAaC,UAAQ,EAACP,KAAK,gBACtCQ,aAAc,SAACvB,GAAD,OAAQP,EAAYO,EAAG5B,MA3BvC,SA6BGiB,EAAQG,MCHf,EAjEqB,YACnBgC,EAAAA,EAAAA,GAAiB,iBAEjB,MAA0BlC,EAAAA,UAA8B,kBAAMmC,EAAAA,EAAAA,SAA9D,eAAOC,EAAP,KAAcC,EAAd,KAEArC,EAAAA,WAAgB,YACdsC,EAAAA,EAAAA,IAAgBF,MAGlB,IAKMrC,EAAUC,EAAAA,aACd,SAACE,GAAD,OACE,SAAC,KAAD,UAA0B,cAAbA,GAA2BqC,EAAAA,EAAAA,MAAmBrC,MAE7D,IAGF,OACE,iBAAKU,MAAO,CAAC4B,OAAQ,QAASC,UAAW,QAAzC,WACE,SAAC,KAAD,CAAYC,OAAO,SAAC,KAAD,+BACnB,UAAC,KAAD,CAAKC,QAAS,CAACC,SAAU,GAAIC,WAAY,IAAzC,WACE,SAAC,KAAD,CAAKF,QAAS,CAACG,OAAQ,GAAvB,UACE,SAAC,KAAD,6BAEF,SAAC,KAAD,CACEC,KAAM,CACJ,CACEjE,IAAK,WACLkE,OAAO,SAAClD,EAAD,CAAgBC,QAASA,YAKxC,UAAC,KAAD,CACE4C,QAAS,CAACC,SAAU,GAAIC,WAAY,IACpCI,OAAQ,CAACC,KAAM,MAAOrC,MAAO,EAAGsC,MAAOC,EAAAA,GAAAA,aAFzC,WAIE,SAAC,KAAD,CAAKT,QAAS,CAACG,OAAQ,GAAvB,UACE,SAAC,KAAD,uCAEF,SAAC,KAAD,CACEC,KAAM,CACJ,CACEjE,IAAK,wBACLkE,OACE,SAAC,KAAD,CACEK,OAAO,SACPC,QAASlB,EAAMvC,SAAS0D,EAAAA,GAAAA,yBACxBC,SAAU,kBA3CNC,EA2CuBF,EAAAA,GAAAA,wBA1CzClB,EAASD,EAAMvC,SAAS4D,GAAQrB,EAAMzC,QAAO,SAAC+D,GAAD,OAAOA,IAAMD,KAAjD,kBAA6DrB,GAA7D,CAAoEqB,UAC7EE,OAAOC,SAASC,SAFC,IAACJ,iB,qECzBTvB,EAAmB,SAACQ,GAC/B1C,EAAAA,WAAgB,WACd,IAAM8D,EAAeC,SAASrB,MAE9B,OADAqB,SAASrB,MAAQA,EACV,WACLqB,SAASrB,MAAQoB,KAElB,CAACpB","sources":["../../core/src/app/time/TimezoneSelect.tsx","../../core/src/app/SettingsRoot.tsx","../../core/src/hooks/useDocumentTitle.tsx"],"sourcesContent":["import {MenuDividerWIP, MenuItemWIP, MenuWIP, SelectWIP} from '@dagster-io/ui';\nimport moment from 'moment-timezone';\nimport * as React from 'react';\n\nimport {TimezoneContext} from './TimezoneContext';\nimport {browserTimezone, browserTimezoneAbbreviation} from './browserTimezone';\n\nconst formatOffset = (mm: number) => {\n  const amm = Math.abs(mm);\n  // moment.tz.zone() offsets are inverted: https://momentjs.com/timezone/docs/#/zone-object/offset/\n  return `${mm < 0 ? '+' : '-'}${Math.floor(amm / 60)}:${amm % 60 < 10 ? '0' : ''}${amm % 60}`;\n};\n\nconst AllTimezoneItems = moment.tz\n  .names()\n  .map((key) => {\n    const offset = moment.tz.zone(key)?.utcOffset(Date.now()) || 0;\n    return {offsetLabel: `${formatOffset(offset)}`, offset, key};\n  })\n  .sort((a, b) => a.offset - b.offset);\n\nconst PopularTimezones = ['UTC', 'US/Pacific', 'US/Mountain', 'US/Central', 'US/Eastern'];\n\nconst offsetLabel = () => {\n  return `${browserTimezoneAbbreviation()} ${formatOffset(\n    moment.tz.zone(browserTimezone())?.utcOffset(Date.now()) || 0,\n  )}`;\n};\n\nconst SortedTimezoneItems = [\n  {\n    key: 'Automatic',\n    offsetLabel: offsetLabel(),\n    offset: 0,\n  },\n  {\n    key: 'divider-1',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => PopularTimezones.includes(t.key)),\n  {\n    key: 'divider-2',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => !PopularTimezones.includes(t.key)),\n];\n\ninterface Props {\n  trigger: (timezone: string) => React.ReactNode;\n}\n\nexport const TimezoneSelect: React.FC<Props> = ({trigger}) => {\n  const [timezone, setTimezone] = React.useContext(TimezoneContext);\n\n  return (\n    <SelectWIP<typeof SortedTimezoneItems[0]>\n      popoverProps={{\n        position: 'bottom-left',\n        modifiers: {offset: {enabled: true, offset: '-12px, 8px'}},\n      }}\n      activeItem={SortedTimezoneItems.find((tz) => tz.key === timezone)}\n      inputProps={{style: {width: '300px'}}}\n      items={SortedTimezoneItems}\n      itemPredicate={(query, tz) => tz.key.toLowerCase().includes(query.toLowerCase())}\n      itemRenderer={(tz, props) =>\n        tz.key.startsWith('divider') ? (\n          <MenuDividerWIP key={tz.key} />\n        ) : (\n          <MenuItemWIP\n            active={props.modifiers.active}\n            onClick={props.handleClick}\n            label={tz.offsetLabel}\n            key={tz.key}\n            text={tz.key}\n          />\n        )\n      }\n      itemListRenderer={({renderItem, filteredItems}) => {\n        const renderedItems = filteredItems.map(renderItem).filter(Boolean);\n        return <MenuWIP>{renderedItems}</MenuWIP>;\n      }}\n      noResults={<MenuItemWIP disabled text=\"No results.\" />}\n      onItemSelect={(tz) => setTimezone(tz.key)}\n    >\n      {trigger(timezone)}\n    </SelectWIP>\n  );\n};\n","import {\n  Box,\n  ButtonLink,\n  Checkbox,\n  ColorsWIP,\n  MetadataTable,\n  PageHeader,\n  Heading,\n  Subheading,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {FeatureFlag, getFeatureFlags, setFeatureFlags} from './Flags';\nimport {TimezoneSelect} from './time/TimezoneSelect';\nimport {automaticLabel} from './time/browserTimezone';\n\nconst SettingsRoot = () => {\n  useDocumentTitle('User settings');\n\n  const [flags, setFlags] = React.useState<FeatureFlag[]>(() => getFeatureFlags());\n\n  React.useEffect(() => {\n    setFeatureFlags(flags);\n  });\n\n  const toggleFlag = (flag: FeatureFlag) => {\n    setFlags(flags.includes(flag) ? flags.filter((f) => f !== flag) : [...flags, flag]);\n    window.location.reload();\n  };\n\n  const trigger = React.useCallback(\n    (timezone: string) => (\n      <ButtonLink>{timezone === 'Automatic' ? automaticLabel() : timezone}</ButtonLink>\n    ),\n    [],\n  );\n\n  return (\n    <div style={{height: '100vh', overflowY: 'auto'}}>\n      <PageHeader title={<Heading>User settings</Heading>} />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Box padding={{bottom: 8}}>\n          <Subheading>Preferences</Subheading>\n        </Box>\n        <MetadataTable\n          rows={[\n            {\n              key: 'Timezone',\n              value: <TimezoneSelect trigger={trigger} />,\n            },\n          ]}\n        />\n      </Box>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'top', width: 1, color: ColorsWIP.KeylineGray}}\n      >\n        <Box padding={{bottom: 8}}>\n          <Subheading>Experimental features</Subheading>\n        </Box>\n        <MetadataTable\n          rows={[\n            {\n              key: 'Debug console logging',\n              value: (\n                <Checkbox\n                  format=\"switch\"\n                  checked={flags.includes(FeatureFlag.flagDebugConsoleLogging)}\n                  onChange={() => toggleFlag(FeatureFlag.flagDebugConsoleLogging)}\n                />\n              ),\n            },\n          ]}\n        />\n      </Box>\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SettingsRoot;\n","import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n"],"names":["formatOffset","mm","amm","Math","abs","floor","AllTimezoneItems","moment","map","key","offset","utcOffset","Date","now","offsetLabel","sort","a","b","PopularTimezones","SortedTimezoneItems","browserTimezoneAbbreviation","browserTimezone","filter","t","includes","TimezoneSelect","trigger","React","TimezoneContext","timezone","setTimezone","popoverProps","position","modifiers","enabled","activeItem","find","tz","inputProps","style","width","items","itemPredicate","query","toLowerCase","itemRenderer","props","startsWith","active","onClick","handleClick","label","text","itemListRenderer","renderItem","renderedItems","filteredItems","Boolean","noResults","disabled","onItemSelect","useDocumentTitle","getFeatureFlags","flags","setFlags","setFeatureFlags","automaticLabel","height","overflowY","title","padding","vertical","horizontal","bottom","rows","value","border","side","color","ColorsWIP","format","checked","FeatureFlag","onChange","flag","f","window","location","reload","currentTitle","document"],"sourceRoot":""}