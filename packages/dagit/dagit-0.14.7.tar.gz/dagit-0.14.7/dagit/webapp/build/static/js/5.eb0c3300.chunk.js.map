{"version":3,"file":"static/js/5.eb0c3300.chunk.js","mappings":"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","sources":["../../../node_modules/anser/lib/index.js","../../../node_modules/ansi-to-react/lib/index.js","../../../node_modules/escape-carriage/index.js","../../../node_modules/lodash/throttle.js"],"sourcesContent":["\"use strict\";\n\n// This file was originally written by @drudru (https://github.com/drudru/ansi_up), MIT, 2011\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ANSI_COLORS = [[{ color: \"0, 0, 0\", \"class\": \"ansi-black\" }, { color: \"187, 0, 0\", \"class\": \"ansi-red\" }, { color: \"0, 187, 0\", \"class\": \"ansi-green\" }, { color: \"187, 187, 0\", \"class\": \"ansi-yellow\" }, { color: \"0, 0, 187\", \"class\": \"ansi-blue\" }, { color: \"187, 0, 187\", \"class\": \"ansi-magenta\" }, { color: \"0, 187, 187\", \"class\": \"ansi-cyan\" }, { color: \"255,255,255\", \"class\": \"ansi-white\" }], [{ color: \"85, 85, 85\", \"class\": \"ansi-bright-black\" }, { color: \"255, 85, 85\", \"class\": \"ansi-bright-red\" }, { color: \"0, 255, 0\", \"class\": \"ansi-bright-green\" }, { color: \"255, 255, 85\", \"class\": \"ansi-bright-yellow\" }, { color: \"85, 85, 255\", \"class\": \"ansi-bright-blue\" }, { color: \"255, 85, 255\", \"class\": \"ansi-bright-magenta\" }, { color: \"85, 255, 255\", \"class\": \"ansi-bright-cyan\" }, { color: \"255, 255, 255\", \"class\": \"ansi-bright-white\" }]];\n\nvar Anser = function () {\n    _createClass(Anser, null, [{\n        key: \"escapeForHtml\",\n\n\n        /**\n         * Anser.escapeForHtml\n         * Escape the input HTML.\n         *\n         * This does the minimum escaping of text to make it compliant with HTML.\n         * In particular, the '&','<', and '>' characters are escaped. This should\n         * be run prior to `ansiToHtml`.\n         *\n         * @name Anser.escapeForHtml\n         * @function\n         * @param {String} txt The input text (containing the ANSI snippets).\n         * @returns {String} The escaped html.\n         */\n        value: function escapeForHtml(txt) {\n            return new Anser().escapeForHtml(txt);\n        }\n\n        /**\n         * Anser.linkify\n         * Adds the links in the HTML.\n         *\n         * This replaces any links in the text with anchor tags that display the\n         * link. The links should have at least one whitespace character\n         * surrounding it. Also, you should apply this after you have run\n         * `ansiToHtml` on the text.\n         *\n         * @name Anser.linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML containing the <a> tags (unescaped).\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return new Anser().linkify(txt);\n        }\n\n        /**\n         * Anser.ansiToHtml\n         * This replaces ANSI terminal escape codes with SPAN tags that wrap the\n         * content.\n         *\n         * This function only interprets ANSI SGR (Select Graphic Rendition) codes\n         * that can be represented in HTML.\n         * For example, cursor movement codes are ignored and hidden from output.\n         * The default style uses colors that are very close to the prescribed\n         * standard. The standard assumes that the text will have a black\n         * background. These colors are set as inline styles on the SPAN tags.\n         *\n         * Another option is to set `use_classes: true` in the options argument.\n         * This will instead set classes on the spans so the colors can be set via\n         * CSS. The class names used are of the format `ansi-*-fg/bg` and\n         * `ansi-bright-*-fg/bg` where `*` is the color name,\n         * i.e black/red/green/yellow/blue/magenta/cyan/white.\n         *\n         * @name Anser.ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return new Anser().ansiToHtml(txt, options);\n        }\n\n        /**\n         * Anser.ansiToJson\n         * Converts ANSI input into JSON output.\n         *\n         * @name Anser.ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            return new Anser().ansiToJson(txt, options);\n        }\n\n        /**\n         * Anser.ansiToText\n         * Converts ANSI input into text output.\n         *\n         * @name Anser.ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return new Anser().ansiToText(txt);\n        }\n\n        /**\n         * Anser\n         * The `Anser` class.\n         *\n         * @name Anser\n         * @function\n         * @returns {Anser}\n         */\n\n    }]);\n\n    function Anser() {\n        _classCallCheck(this, Anser);\n\n        this.fg = this.bg = this.fg_truecolor = this.bg_truecolor = null;\n        this.bright = 0;\n    }\n\n    /**\n     * setupPalette\n     * Sets up the palette.\n     *\n     * @name setupPalette\n     * @function\n     */\n\n\n    _createClass(Anser, [{\n        key: \"setupPalette\",\n        value: function setupPalette() {\n            this.PALETTE_COLORS = [];\n\n            // Index 0..15 : System color\n            for (var i = 0; i < 2; ++i) {\n                for (var j = 0; j < 8; ++j) {\n                    this.PALETTE_COLORS.push(ANSI_COLORS[i][j].color);\n                }\n            }\n\n            // Index 16..231 : RGB 6x6x6\n            // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n            var levels = [0, 95, 135, 175, 215, 255];\n            var format = function format(r, g, b) {\n                return levels[r] + \", \" + levels[g] + \", \" + levels[b];\n            };\n            var r = void 0,\n                g = void 0,\n                b = void 0;\n            for (var _r = 0; _r < 6; ++_r) {\n                for (var _g = 0; _g < 6; ++_g) {\n                    for (var _b = 0; _b < 6; ++_b) {\n                        this.PALETTE_COLORS.push(format(_r, _g, _b));\n                    }\n                }\n            }\n\n            // Index 232..255 : Grayscale\n            var level = 8;\n            for (var _i = 0; _i < 24; ++_i, level += 10) {\n                this.PALETTE_COLORS.push(format(level, level, level));\n            }\n        }\n\n        /**\n         * escapeForHtml\n         * Escapes the input text.\n         *\n         * @name escapeForHtml\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The escpaed HTML output.\n         */\n\n    }, {\n        key: \"escapeForHtml\",\n        value: function escapeForHtml(txt) {\n            return txt.replace(/[&<>]/gm, function (str) {\n                return str == \"&\" ? \"&amp;\" : str == \"<\" ? \"&lt;\" : str == \">\" ? \"&gt;\" : \"\";\n            });\n        }\n\n        /**\n         * linkify\n         * Adds HTML link elements.\n         *\n         * @name linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML output containing link elements.\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n                return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n            });\n        }\n\n        /**\n         * ansiToHtml\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToJson\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The JSON output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            options = options || {};\n            options.json = true;\n            options.clearLine = false;\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToText\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return this.process(txt, {}, false);\n        }\n\n        /**\n         * process\n         * Processes the input.\n         *\n         * @name process\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options An object passed to `processChunk` method, extended with:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup\n         */\n\n    }, {\n        key: \"process\",\n        value: function process(txt, options, markup) {\n            var _this = this;\n\n            var self = this;\n            var raw_text_chunks = txt.split(/\\033\\[/);\n            var first_chunk = raw_text_chunks.shift(); // the first chunk is not the result of the split\n\n            if (options === undefined || options === null) {\n                options = {};\n            }\n            options.clearLine = /\\r/.test(txt); // check for Carriage Return\n            var color_chunks = raw_text_chunks.map(function (chunk) {\n                return _this.processChunk(chunk, options, markup);\n            });\n\n            if (options && options.json) {\n                var first = self.processChunkJson(\"\");\n                first.content = first_chunk;\n                first.clearLine = options.clearLine;\n                color_chunks.unshift(first);\n                if (options.remove_empty) {\n                    color_chunks = color_chunks.filter(function (c) {\n                        return !c.isEmpty();\n                    });\n                }\n                return color_chunks;\n            } else {\n                color_chunks.unshift(first_chunk);\n            }\n\n            return color_chunks.join(\"\");\n        }\n\n        /**\n         * processChunkJson\n         * Processes the current chunk into json output.\n         *\n         * @name processChunkJson\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object} The result object:\n         *\n         *  - `content` (String): The text.\n         *  - `fg` (String|null): The foreground color.\n         *  - `bg` (String|null): The background color.\n         *  - `fg_truecolor` (String|null): The foreground true color (if 16m color is enabled).\n         *  - `bg_truecolor` (String|null): The background true color (if 16m color is enabled).\n         *  - `clearLine` (Boolean): `true` if a carriageReturn \\r was fount at end of line.\n         *  - `was_processed` (Bolean): `true` if the colors were processed, `false` otherwise.\n         *  - `isEmpty` (Function): A function returning `true` if the content is empty, or `false` otherwise.\n         *\n         */\n\n    }, {\n        key: \"processChunkJson\",\n        value: function processChunkJson(text, options, markup) {\n\n            // Are we using classes or styles?\n            options = typeof options == \"undefined\" ? {} : options;\n            var use_classes = options.use_classes = typeof options.use_classes != \"undefined\" && options.use_classes;\n            var key = options.key = use_classes ? \"class\" : \"color\";\n\n            var result = {\n                content: text,\n                fg: null,\n                bg: null,\n                fg_truecolor: null,\n                bg_truecolor: null,\n                clearLine: options.clearLine,\n                decoration: null,\n                was_processed: false,\n                isEmpty: function isEmpty() {\n                    return !result.content;\n                }\n            };\n\n            // Each \"chunk\" is the text after the CSI (ESC + \"[\") and before the next CSI/EOF.\n            //\n            // This regex matches four groups within a chunk.\n            //\n            // The first and third groups match code type.\n            // We supported only SGR command. It has empty first group and \"m\" in third.\n            //\n            // The second group matches all of the number+semicolon command sequences\n            // before the \"m\" (or other trailing) character.\n            // These are the graphics or SGR commands.\n            //\n            // The last group is the text (including newlines) that is colored by\n            // the other group\"s commands.\n            var matches = text.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);\n\n            if (!matches) return result;\n\n            var orig_txt = result.content = matches[4];\n            var nums = matches[2].split(\";\");\n\n            // We currently support only \"SGR\" (Select Graphic Rendition)\n            // Simply ignore if not a SGR command.\n            if (matches[1] !== \"\" || matches[3] !== \"m\") {\n                return result;\n            }\n\n            if (!markup) {\n                return result;\n            }\n\n            var self = this;\n\n            self.decoration = null;\n\n            while (nums.length > 0) {\n                var num_str = nums.shift();\n                var num = parseInt(num_str);\n\n                if (isNaN(num) || num === 0) {\n                    self.fg = self.bg = self.decoration = null;\n                } else if (num === 1) {\n                    self.decoration = \"bold\";\n                } else if (num === 2) {\n                    self.decoration = \"dim\";\n                    // Enable code 2 to get string\n                } else if (num == 3) {\n                    self.decoration = \"italic\";\n                } else if (num == 4) {\n                    self.decoration = \"underline\";\n                } else if (num == 5) {\n                    self.decoration = \"blink\";\n                } else if (num === 7) {\n                    self.decoration = \"reverse\";\n                } else if (num === 8) {\n                    self.decoration = \"hidden\";\n                    // Enable code 9 to get strikethrough\n                } else if (num === 9) {\n                    self.decoration = \"strikethrough\";\n                } else if (num == 39) {\n                    self.fg = null;\n                } else if (num == 49) {\n                    self.bg = null;\n                    // Foreground color\n                } else if (num >= 30 && num < 38) {\n                    self.fg = ANSI_COLORS[0][num % 10][key];\n                    // Foreground bright color\n                } else if (num >= 90 && num < 98) {\n                    self.fg = ANSI_COLORS[1][num % 10][key];\n                    // Background color\n                } else if (num >= 40 && num < 48) {\n                    self.bg = ANSI_COLORS[0][num % 10][key];\n                    // Background bright color\n                } else if (num >= 100 && num < 108) {\n                    self.bg = ANSI_COLORS[1][num % 10][key];\n                } else if (num === 38 || num === 48) {\n                    // extend color (38=fg, 48=bg)\n                    var is_foreground = num === 38;\n                    if (nums.length >= 1) {\n                        var mode = nums.shift();\n                        if (mode === \"5\" && nums.length >= 1) {\n                            // palette color\n                            var palette_index = parseInt(nums.shift());\n                            if (palette_index >= 0 && palette_index <= 255) {\n                                if (!use_classes) {\n                                    if (!this.PALETTE_COLORS) {\n                                        self.setupPalette();\n                                    }\n                                    if (is_foreground) {\n                                        self.fg = this.PALETTE_COLORS[palette_index];\n                                    } else {\n                                        self.bg = this.PALETTE_COLORS[palette_index];\n                                    }\n                                } else {\n                                    var klass = palette_index >= 16 ? \"ansi-palette-\" + palette_index : ANSI_COLORS[palette_index > 7 ? 1 : 0][palette_index % 8][\"class\"];\n                                    if (is_foreground) {\n                                        self.fg = klass;\n                                    } else {\n                                        self.bg = klass;\n                                    }\n                                }\n                            }\n                        } else if (mode === \"2\" && nums.length >= 3) {\n                            // true color\n                            var r = parseInt(nums.shift());\n                            var g = parseInt(nums.shift());\n                            var b = parseInt(nums.shift());\n                            if (r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {\n                                var color = r + \", \" + g + \", \" + b;\n                                if (!use_classes) {\n                                    if (is_foreground) {\n                                        self.fg = color;\n                                    } else {\n                                        self.bg = color;\n                                    }\n                                } else {\n                                    if (is_foreground) {\n                                        self.fg = \"ansi-truecolor\";\n                                        self.fg_truecolor = color;\n                                    } else {\n                                        self.bg = \"ansi-truecolor\";\n                                        self.bg_truecolor = color;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (self.fg === null && self.bg === null && self.decoration === null) {\n                return result;\n            } else {\n                var styles = [];\n                var classes = [];\n                var data = {};\n\n                result.fg = self.fg;\n                result.bg = self.bg;\n                result.fg_truecolor = self.fg_truecolor;\n                result.bg_truecolor = self.bg_truecolor;\n                result.decoration = self.decoration;\n                result.was_processed = true;\n\n                return result;\n            }\n        }\n\n        /**\n         * processChunk\n         * Processes the current chunk of text.\n         *\n         * @name processChunk\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object|String} The result (object if `json` is wanted back or string otherwise).\n         */\n\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(text, options, markup) {\n            var _this2 = this;\n\n            var self = this;\n            options = options || {};\n            var jsonChunk = this.processChunkJson(text, options, markup);\n\n            if (options.json) {\n                return jsonChunk;\n            }\n            if (jsonChunk.isEmpty()) {\n                return \"\";\n            }\n            if (!jsonChunk.was_processed) {\n                return jsonChunk.content;\n            }\n\n            var use_classes = options.use_classes;\n\n            var styles = [];\n            var classes = [];\n            var data = {};\n            var render_data = function render_data(data) {\n                var fragments = [];\n                var key = void 0;\n                for (key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        fragments.push(\"data-\" + key + \"=\\\"\" + _this2.escapeForHtml(data[key]) + \"\\\"\");\n                    }\n                }\n                return fragments.length > 0 ? \" \" + fragments.join(\" \") : \"\";\n            };\n\n            if (jsonChunk.fg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.fg + \"-fg\");\n                    if (jsonChunk.fg_truecolor !== null) {\n                        data[\"ansi-truecolor-fg\"] = jsonChunk.fg_truecolor;\n                        jsonChunk.fg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"color:rgb(\" + jsonChunk.fg + \")\");\n                }\n            }\n\n            if (jsonChunk.bg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.bg + \"-bg\");\n                    if (jsonChunk.bg_truecolor !== null) {\n                        data[\"ansi-truecolor-bg\"] = jsonChunk.bg_truecolor;\n                        jsonChunk.bg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"background-color:rgb(\" + jsonChunk.bg + \")\");\n                }\n            }\n\n            if (jsonChunk.decoration) {\n                if (use_classes) {\n                    classes.push(\"ansi-\" + jsonChunk.decoration);\n                } else if (jsonChunk.decoration === \"bold\") {\n                    styles.push(\"font-weight:bold\");\n                } else if (jsonChunk.decoration === \"dim\") {\n                    styles.push(\"opacity:0.5\");\n                } else if (jsonChunk.decoration === \"italic\") {\n                    styles.push(\"font-style:italic\");\n                    // underline and blink are treated bellow\n                } else if (jsonChunk.decoration === \"reverse\") {\n                    styles.push(\"filter:invert(100%)\");\n                } else if (jsonChunk.decoration === \"hidden\") {\n                    styles.push(\"visibility:hidden\");\n                } else if (jsonChunk.decoration === \"strikethrough\") {\n                    styles.push(\"text-decoration:line-through\");\n                } else {\n                    styles.push(\"text-decoration:\" + jsonChunk.decoration);\n                }\n            }\n\n            if (use_classes) {\n                return \"<span class=\\\"\" + classes.join(\" \") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            } else {\n                return \"<span style=\\\"\" + styles.join(\";\") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            }\n        }\n    }]);\n\n    return Anser;\n}();\n\n;\n\nmodule.exports = Anser;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst anser_1 = __importDefault(require(\"anser\"));\nconst escape_carriage_1 = require(\"escape-carriage\");\nconst React = __importStar(require(\"react\"));\nconst LINK_REGEX = /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/;\n/**\n * Converts ANSI strings into JSON output.\n * @name ansiToJSON\n * @function\n * @param {String} input The input string.\n * @return {Array} The parsed input.\n */\nfunction ansiToJSON(input, use_classes = false) {\n    input = escape_carriage_1.escapeCarriageReturn(input);\n    return anser_1.default.ansiToJson(input, {\n        json: true,\n        remove_empty: true,\n        use_classes\n    });\n}\n/**\n * Create a class string.\n * @name createClass\n * @function\n * @param {AnserJsonEntry}.\n * @return {String} class name(s)\n */\nfunction createClass(bundle) {\n    let classNames = \"\";\n    if (!bundle.bg && !bundle.fg) {\n        return null;\n    }\n    if (bundle.bg) {\n        classNames += bundle.bg + \" \";\n    }\n    if (bundle.fg) {\n        classNames += bundle.fg + \" \";\n    }\n    classNames = classNames.substring(0, classNames.length - 1);\n    return classNames;\n}\n/**\n * Create the style attribute.\n * @name createStyle\n * @function\n * @param {AnserJsonEntry}.\n * @return {Object} returns the style object\n */\nfunction createStyle(bundle) {\n    const style = {};\n    if (bundle.bg) {\n        style.backgroundColor = `rgb(${bundle.bg})`;\n    }\n    if (bundle.fg) {\n        style.color = `rgb(${bundle.fg})`;\n    }\n    return style;\n}\n/**\n * Converts an Anser bundle into a React Node.\n * @param linkify whether links should be converting into clickable anchor tags.\n * @param useClasses should render the span with a class instead of style.\n * @param bundle Anser output.\n */\nfunction convertBundleIntoReact(linkify, useClasses, bundle, key) {\n    const style = useClasses ? null : createStyle(bundle);\n    const className = useClasses ? createClass(bundle) : null;\n    if (!linkify) {\n        return React.createElement(\"span\", { style, key, className }, bundle.content);\n    }\n    const words = bundle.content.split(/(\\s+)/).reduce((words, word, index) => {\n        // If this is a separator, re-add the space removed from split.\n        if (index % 2 === 1) {\n            words.push(word);\n            return words;\n        }\n        // If  this isn't a link, just return the word as-is.\n        if (!LINK_REGEX.test(word)) {\n            words.push(word);\n            return words;\n        }\n        words.push(React.createElement(\"a\", {\n            key: index,\n            href: word,\n            target: \"_blank\"\n        }, `${word}`));\n        return words;\n    }, []);\n    return React.createElement(\"span\", { style, key, className }, words);\n}\nfunction Ansi(props) {\n    const { className, useClasses, children, linkify } = props;\n    return React.createElement(\"code\", { className }, ansiToJSON(children, !!useClasses).map(convertBundleIntoReact.bind(null, linkify, !!useClasses)));\n}\nexports.default = Ansi;\n","/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  while (/\\r[^$]/.test(txt)) {\n    var base = /^(.*)\\r+/m.exec(txt)[1];\n    var insert = /\\r+(.*)$/m.exec(txt)[1];\n    insert = insert + base.slice(insert.length, base.length);\n    txt = txt.replace(/\\r+.*$/m, \"\\r\").replace(/^.*\\r/m, insert);\n  }\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  var idx = txt.lastIndexOf(\"\\n\");\n\n  return (\n    escapeCarriageReturn(txt.slice(0, idx)) +\n    \"\\n\" +\n    escapeSingleLineSafe(txt.slice(idx + 1))\n  );\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","ANSI_COLORS","color","Anser","instance","TypeError","_classCallCheck","this","fg","bg","fg_truecolor","bg_truecolor","bright","value","txt","escapeForHtml","linkify","options","ansiToHtml","ansiToJson","ansiToText","PALETTE_COLORS","j","push","levels","format","r","g","b","_r","_g","_b","level","_i","replace","str","process","json","clearLine","markup","_this","raw_text_chunks","split","first_chunk","shift","undefined","test","color_chunks","map","chunk","processChunk","first","processChunkJson","content","unshift","remove_empty","filter","c","isEmpty","join","text","use_classes","result","decoration","was_processed","matches","match","nums","self","num_str","num","parseInt","isNaN","is_foreground","mode","palette_index","klass","setupPalette","_this2","jsonChunk","styles","classes","data","render_data","fragments","hasOwnProperty","module","exports","__importDefault","mod","__esModule","__importStar","k","call","anser_1","require","escape_carriage_1","React","LINK_REGEX","convertBundleIntoReact","useClasses","bundle","style","backgroundColor","createStyle","className","classNames","substring","createClass","createElement","words","reduce","word","index","href","children","input","escapeCarriageReturn","default","ansiToJSON","bind","base","exec","insert","slice","findLongestString","arr","longest","escapeSingleLineSafe","res","escapeCarriageReturnSafe","idx","lastIndexOf","debounce","isObject","func","wait","leading","trailing"],"sourceRoot":""}