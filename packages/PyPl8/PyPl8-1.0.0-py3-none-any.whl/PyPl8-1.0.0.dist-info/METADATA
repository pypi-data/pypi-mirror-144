Metadata-Version: 2.1
Name: PyPl8
Version: 1.0.0
Summary: UNKNOWN
Home-page: https://github.com/lacyk3/PyPl8
Author: Katherine Owens
Author-email: kowens@pnri.org
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/lacyk3/PyPl8/issues
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: scipy
Requires-Dist: matplotlib
Requires-Dist: scikit-image
Requires-Dist: opencv-python
Requires-Dist: openpyxl
Requires-Dist: pyzbar
Requires-Dist: Ipython

# PyPl8

Image analysis package for segmenting images of microbial communities and extracting quantitative features automatically. 

## Background
This package makes use of the cv2 and sci-kit image libraries for image processing. 

It was developed in the Dudley lab at Pacific Northwest Research Institute and is currently most useful for analyzing images of rectangularly arrayed
patches/colonies on agar plates photographed against a dark background.

## Organization

* **PyPl8.BarcodeMethods** contains the function `Rename()` which can be used to rename a folder of images based on the barcode visible in each image if an excel spreadsheet 
relating barcode numbers to relevant plate information is provided in the current working directory. Barcodes are detected using pyzbar. 
See their documentation for a list of recognizable barcode styles. 

* **PyPl8.PreprocessingMethods** contains functions used to crop each image to relevant areas of interest prior to segmentation. 

* **ProcessImages.py** contains the main functions for processing a single image, `ProcessImage()`, or a batch of images, `ProcessBatch()` and `ParallelProcessBatch()`.

* There are several example images included in the package which can be used to test out the functions provided. These images are `Funnel()`, `PSAT1()`, and `OTC()`.
There is only one test function provided, `ProcessImageTest()`, which can be used to process images already loaded into the workspace as arrays. 

* To check which version of PyPl8 you have installed run

    import PyPl8
    PyPl8.__version__

## Examples

For more detailed documentation and to see examples of how to use these functions, visit the PyPl8 github page. 




